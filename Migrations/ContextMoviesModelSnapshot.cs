// <auto-generated />
using System;
using KeyWorksStreamberry.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KeyWorksStreamberry.Migrations
{
    [DbContext(typeof(ContextMovies))]
    partial class ContextMoviesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KeyWorksStreamberry.Models.CommentsModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int?>("MovieModelId")
                        .HasColumnType("int");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("MovieModelId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("KeyWorksStreamberry.Models.MovieModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Genere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YearRelase")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("KeyWorksStreamberry.Models.StreamingsMovie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int?>("MovieModelId")
                        .HasColumnType("int");

                    b.Property<string>("StreamingName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MovieModelId");

                    b.ToTable("Streamings");
                });

            modelBuilder.Entity("KeyWorksStreamberry.Models.CommentsModel", b =>
                {
                    b.HasOne("KeyWorksStreamberry.Models.MovieModel", null)
                        .WithMany("Comments")
                        .HasForeignKey("MovieModelId");
                });

            modelBuilder.Entity("KeyWorksStreamberry.Models.StreamingsMovie", b =>
                {
                    b.HasOne("KeyWorksStreamberry.Models.MovieModel", null)
                        .WithMany("Streaming")
                        .HasForeignKey("MovieModelId");
                });

            modelBuilder.Entity("KeyWorksStreamberry.Models.MovieModel", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Streaming");
                });
#pragma warning restore 612, 618
        }
    }
}
